/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ClassifySingleResponseClassificationSummary extends SpeakeasyBase {
    /**
     * Unique ID for the document type.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * User-friendly name for the document type.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Similarity score comparing the document to the document type, between 0 and 1.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "score" })
    score?: number;
}

/**
 * Document type defined in the Sensible account that this doc is most similar to. To use a document type for classification, Sensible requires that the type contains at least one reference document.
 */
export class ClassifySingleResponseDocumentType extends SpeakeasyBase {
    /**
     * Unique ID for the document type.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * User-friendly name for the document type.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Similarity score comparing the document to the document type, between 0 and 1.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "score" })
    score?: number;
}

export class ClassifySingleResponseReferenceDocuments extends SpeakeasyBase {
    /**
     * Unique ID for the reference document.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * User-friendly name for the reference document.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Similarity score comparing the document to the reference document, between 0 and 1.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "score" })
    score?: number;
}

/**
 * The document type and reference documents in the Sensible account that are most similar to this document.
 *
 * @remarks
 *
 */
export class ClassifySingleResponse extends SpeakeasyBase {
    /**
     * Scores for this document's similarity to each document type in the Sensible account, excluding document types Sensible created in your account as tutorials, such as `senseml_basics`.
     */
    @SpeakeasyMetadata({ elemType: ClassifySingleResponseClassificationSummary })
    @Expose({ name: "classification_summary" })
    @Type(() => ClassifySingleResponseClassificationSummary)
    classificationSummary?: ClassifySingleResponseClassificationSummary[];

    /**
     * Document type defined in the Sensible account that this doc is most similar to. To use a document type for classification, Sensible requires that the type contains at least one reference document.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "document_type" })
    @Type(() => ClassifySingleResponseDocumentType)
    documentType?: ClassifySingleResponseDocumentType;

    /**
     * Reference documents uploaded to the Sensible account that this document is most similar to.
     */
    @SpeakeasyMetadata({ elemType: ClassifySingleResponseReferenceDocuments })
    @Expose({ name: "reference_documents" })
    @Type(() => ClassifySingleResponseReferenceDocuments)
    referenceDocuments?: ClassifySingleResponseReferenceDocuments[];
}
